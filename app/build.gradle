apply plugin: 'com.android.application'
apply plugin: 'android-apt'
apply plugin: 'com.droidtitan.lintcleaner'

buildscript {
  repositories {
    jcenter()
  }
  dependencies {
    // replace with the current version of the Android plugin
    classpath 'com.android.tools.build:gradle:2.2.0'
    // Since Android's Gradle plugin 0.11, you have to use android-apt >= 1.3
    classpath 'com.neenbedankt.gradle.plugins:android-apt:1.8'
    classpath 'com.droidtitan:lint-cleaner-plugin:0.3.0'
  }
}

apt {
  arguments {
    resourcePackageName "com.pathfinder.takeaway"
    // androidManifestFile variant.outputs[0].processResources.manifestFile
  }
}

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

android {
  compileSdkVersion Integer.parseInt(project.ANDROID_COMPILE_SDK_VERSION)
  buildToolsVersion project.ANDROID_BUILD_TOOLS_VERSION

  defaultConfig {
    applicationId rootProject.ext.android.applicationId
    minSdkVersion Integer.parseInt(project.ANDROID_MIN_SDK)
    targetSdkVersion Integer.parseInt(project.ANDROID_TARGET_SDK_VERSION)
    versionName project.VERSION_NAME
    versionCode Integer.parseInt(project.VERSION_CODE)
    testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
  }
  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
  }

  sourceSets {
    main {
      manifest.srcFile 'src/main/AndroidManifest.xml'
      java.srcDirs = ['src/main/java']
      res.srcDirs = ['src/main/res']
    }
  }

  lintOptions {
    abortOnError false
  }
}

dependencies {
  compile fileTree(dir: 'libs', include: ['*.jar'])
  androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
    exclude group: 'com.android.support', module: 'support-annotations'
  })
  testCompile 'junit:junit:4.12'

  //dependencies
  compile rootProject.ext.dependencies["design"]
  compile rootProject.ext.dependencies["appcompat-v7"]
  compile rootProject.ext.dependencies["recyclerview-v7"]
  compile rootProject.ext.dependencies["numberprogressbar"]
  compile rootProject.ext.dependencies["photoview"]
  compile rootProject.ext.dependencies["umeng-analytics"]
  compile rootProject.ext.dependencies["retrofit"]
  compile rootProject.ext.dependencies["rxandroid"]
  compile rootProject.ext.dependencies["rxjava"]
  compile rootProject.ext.dependencies["okhttp-urlconnection"]
  compile rootProject.ext.dependencies["okhttp"]
  compile rootProject.ext.dependencies["butterknife"]
  compile rootProject.ext.dependencies["otto"]
  compile rootProject.ext.dependencies["glide"]
  compile rootProject.ext.dependencies["cardview-v7"]
  compile rootProject.ext.dependencies["support-v13"]
  compile rootProject.ext.dependencies["greendao"]
  compile rootProject.ext.dependencies["fastjson"]

  //Dagger
  provided 'javax.annotation:javax.annotation-api:1.2'
  compile 'com.google.dagger:dagger:2.0.2'
  apt 'com.google.dagger:dagger-compiler:2.0.2'

  compile 'com.squareup.retrofit2:adapter-rxjava:2.0.1'


  compile('com.github.afollestad.material-dialogs:core:0.8.5.2@aar') {
    transitive = true
  }
  compile 'com.timehop.stickyheadersrecyclerview:library:0.4.3@aar'
  compile 'com.github.clans:fab:1.6.2'
  compile 'com.daimajia.swipelayout:library:1.2.0@aar'

  compile 'com.github.castorflex.smoothprogressbar:library:1.1.0'
  compile 'com.liulishuo.filedownloader:library:0.2.0'

  //facebook
  compile 'com.facebook.fresco:fresco:0.10.0'
  compile "com.facebook.fresco:imagepipeline-okhttp3:0.10.0"
  compile 'com.facebook.fresco:animated-gif:0.10.0'

  debugCompile 'com.squareup.leakcanary:leakcanary-android:1.4-beta2'
  releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.4-beta2'
}
